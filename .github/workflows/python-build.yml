# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Python Package

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Should deploy (n/y)"
        default: "n"
        required: false
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Prepare Variables
        uses: ./.github/actions/vars
        id: vars
        with:
          image-name: tip-graph-api
          slack-webhook-url-prod: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
          slack-webhook-url-dev: ${{ secrets.SLACK_WEBHOOK_URL_DEV }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN_MISSING }}

      - name: Start notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,message,author
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `App ${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_MESSAGE}) by ${process.env.AS_AUTHOR} started :rocket:`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ steps.vars.outputs.slack-webhook-url }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Finish notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,message,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `App ${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_MESSAGE}) by ${process.env.AS_AUTHOR} *${{ job.status }}* in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ steps.vars.outputs.slack-webhook-url }}
        if: (success() || failure()) && ${{ steps.vars.outputs.should-deploy == 'true' }}
      - name: Print deploy
        if: ${{ steps.vars.outputs.should-deploy == 'true' }}
        run: |
          echo "Let's go..."
